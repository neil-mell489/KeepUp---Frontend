{"ast":null,"code":"var _jsxFileName = \"/Users/neilmellstrom/Desktop/code/projects/project-4/KeepUp/KeepUp---Frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport Profile from './pages/Profile';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport Nav from './components/Nav';\nimport Homepage from './pages/HomePage';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const URL = process.env.REACT_APP_URL;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [fetchingUser, setFetchingUser] = useState(false);\n  const navigate = useNavigate();\n  const handleSignUp = async user => {\n    const response = await fetch(`${URL}/api/auth/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    const data = await response.json();\n    console.log(data);\n    navigate(\"/login\");\n  };\n  const handleLogin = async user => {\n    console.log(URL);\n    const response = await fetch(`${URL}/api/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    const data = await response.json();\n    console.log(data);\n    // if status is NOT 200(OK)\n    if (response.status !== 200 || !data.token) {\n      return data;\n    }\n    localStorage.setItem(\"authToken\", data.token);\n    setIsLoggedIn(true);\n    navigate(`/profile/${data.id}`);\n  };\n  const handleLogout = () => {\n    console.log(\"in handle logout\");\n    localStorage.removeItem(\"authToken\");\n    setIsLoggedIn(false);\n    navigate(\"/\");\n  };\n  const fetchUser = async id => {\n    // Prevent fetching user data if already fetching\n    if (fetchingUser) return;\n\n    // Set fetchingUser to true to prevent multiple requests\n    setFetchingUser(true);\n\n    // get logged in user's token\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      const response = await fetch(`${URL}/api/user/${id}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"authorization\": token // bearerHeader variable on the backend\n        }\n      });\n      const data = await response.json();\n      setUser(data.data);\n      setFetchingUser(false); // Reset fetchingUser after successful fetch\n    } else {\n      console.log(\"no token\");\n      setFetchingUser(false); // Reset fetchingUser if no token\n    }\n  };\n  useEffect(() => {\n    // this will help with render UI for Nav when user refreshes the page\n    let token = localStorage.getItem(\"authToken\");\n    // token doesnt exist in local storage? \n    if (!token) {\n      setIsLoggedIn(false); // they are logged out\n    } else {\n      setIsLoggedIn(true); // they are logged in \n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      isLoggedIn: isLoggedIn,\n      handleLogout: handleLogout,\n      handleNavigation: navigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {\n          handleSignUp: handleSignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {\n          handleSignUp: handleSignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          handleLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile/:id\",\n        element: /*#__PURE__*/_jsxDEV(Profile, {\n          fetchUser: fetchUser,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SrHkrEYr8YKTJPLULnn5ClOXdWo=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","useNavigate","Profile","Signup","Login","Nav","Homepage","useState","useEffect","jsxDEV","_jsxDEV","App","_s","URL","process","env","REACT_APP_URL","isLoggedIn","setIsLoggedIn","user","setUser","fetchingUser","setFetchingUser","navigate","handleSignUp","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","handleLogin","status","token","localStorage","setItem","id","handleLogout","removeItem","fetchUser","getItem","className","children","handleNavigation","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/neilmellstrom/Desktop/code/projects/project-4/KeepUp/KeepUp---Frontend/src/App.js"],"sourcesContent":["import { Routes, Route, useNavigate } from 'react-router-dom';\nimport Profile from './pages/Profile';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport Nav from './components/Nav';\nimport Homepage from './pages/HomePage';\nimport { useState, useEffect } from 'react';\n\n\n\nfunction App() {\n  const URL = process.env.REACT_APP_URL;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [fetchingUser, setFetchingUser] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSignUp = async(user) => {\n    const response = await fetch(`${URL}/api/auth/signup` , {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user) \n    });\n    const data = await response.json();\n    console.log(data);\n    navigate(\"/login\");\n  };\n\n  const handleLogin = async(user) => {\n    console.log(URL)\n    const response = await fetch(`${URL}/api/auth/login` , {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user)\n    });\n    const data = await response.json();\n    console.log(data);\n    // if status is NOT 200(OK)\n    if(response.status !== 200 || !data.token){\n      return data;\n    }\n    localStorage.setItem(\"authToken\", data.token);\n    setIsLoggedIn(true);\n    navigate(`/profile/${data.id}`);\n  };\n\n\n  const handleLogout = () => {\n    console.log(\"in handle logout\");\n    localStorage.removeItem(\"authToken\");\n    setIsLoggedIn(false);\n    navigate(\"/\");\n  };\n\n  const fetchUser = async (id) => {\n    // Prevent fetching user data if already fetching\n    if (fetchingUser) return;\n\n    // Set fetchingUser to true to prevent multiple requests\n    setFetchingUser(true);\n\n    // get logged in user's token\n    const token = localStorage.getItem(\"authToken\");\n    if(token){\n      const response = await fetch(`${URL}/api/user/${id}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"authorization\": token // bearerHeader variable on the backend\n        }\n      });\n      const data = await response.json();\n      setUser(data.data);\n      setFetchingUser(false); // Reset fetchingUser after successful fetch\n    } else {\n      console.log(\"no token\");\n      setFetchingUser(false); // Reset fetchingUser if no token\n    }\n  };\n\n  useEffect(()=>{\n    // this will help with render UI for Nav when user refreshes the page\n    let token = localStorage.getItem(\"authToken\");\n    // token doesnt exist in local storage? \n    if(!token){\n      setIsLoggedIn(false); // they are logged out\n    } else {\n      setIsLoggedIn(true); // they are logged in \n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Nav isLoggedIn={isLoggedIn} handleLogout={handleLogout} handleNavigation={navigate} /> \n      <Routes>\n        {/* Pass URL to child components */}\n        <Route path='/' element={<Signup handleSignUp={handleSignUp} />} />\n        <Route path='/signup' element={<Signup handleSignUp={handleSignUp} />} />\n        <Route path='/login' element={<Login handleLogin={handleLogin}  />} />\n        <Route path='/profile/:id' element={<Profile fetchUser={fetchUser} user={user} />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}